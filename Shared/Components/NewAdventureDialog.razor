@using FightingFantasyCompanion.Shared.Enums
@using FightingFantasyCompanion.Shared.Models
@using FightingFantasyCompanion.Shared.Services
@inject IAdventureService adventureService

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            New Adventure
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@adventure">
            <MudSelect Variant="Variant.Filled" Label="Book" T="BookName" @bind-Value="adventure.Bookname">
                @foreach (BookName bookName in Enum.GetValues(typeof(BookName)))
                {
                    <MudSelectItem T="BookName" Value="@bookName">@bookName.ToString()</MudSelectItem>
                }
            </MudSelect>
            <div class="d-flex gap-4">
                <StatDisplay statType="StatType.SKILL" statValue="@adventure.InitialSkill" />
                <StatDisplay statType="StatType.STAMINA" statValue="@adventure.InitialStamina" />
                <StatDisplay statType="StatType.LUCK" statValue="@adventure.InitialLuck" />
            </div>
            <div class="d-flex gap-4">
                <MudNumericField HideSpinButtons="true" @bind-Value="adventure.Gold" Label="Gold" Variant="Variant.Filled" Min="0" class="flex-grow-1" />
                <MudNumericField HideSpinButtons="true" @bind-Value="adventure.Provisions" Label="Provisions" Variant="Variant.Filled" Min="0" class="flex-grow-1" />
            </div>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="CreateNewAdventure">Create</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Adventure adventure { get; set; } = new Adventure();

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task CreateNewAdventure()
    {
        await adventureService.SaveAdventure(adventure);
        MudDialog.Close(DialogResult.Ok(adventure));
    }
}
